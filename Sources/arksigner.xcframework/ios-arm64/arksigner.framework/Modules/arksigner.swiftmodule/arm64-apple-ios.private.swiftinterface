// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.10 (swiftlang-5.10.0.13 clang-1500.3.9.4)
// swift-module-flags: -target arm64-apple-ios13.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -enable-bare-slash-regex -module-name arksigner
import AVFoundation
import ArkFace
import ArkNFC
import ArkTCKK
import Flutter
import Foundation
import ImageIO
import JGProgressHUD
import JitsiMeetSDK
import SCLAlertView
import Swift
import UIKit
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
@_exported import arksigner
@_hasMissingDesignatedInitializers public class AlertView {
  public func hideAlerts()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers public class ArksignerPlugin : ObjectiveC.NSObject, Flutter.FlutterPlugin {
  @objc public static func register(with registrar: any Flutter.FlutterPluginRegistrar)
  @objc public func handle(_ call: Flutter.FlutterMethodCall, result: @escaping Flutter.FlutterResult)
  @objc override dynamic public init()
  @objc deinit
}
public struct ArkVideoCallCommands {
  public static let kChangeFlash: Swift.String
  public static let kOperatorLeft: Swift.String
  public static let kOperatorJoined: Swift.String
  public static let kChangeCamera: Swift.String
  public static let kOperatorLeftFailed: Swift.String
  public static let kOperatorLeftSuccess: Swift.String
  public static let kOperatorLeftComingManager: Swift.String
}
extension UIKit.UIImage {
  public class func ArkGifLoader(_ name: Swift.String) -> UIKit.UIImage?
}
public protocol StoryboardInstantiable : ObjectiveC.NSObjectProtocol {
  associatedtype T
  static var defaultFileName: Swift.String { get }
  static func instantiateViewController(_ bundle: Foundation.Bundle?) -> Self.T
}
extension arksigner.StoryboardInstantiable where Self : UIKit.UIViewController {
  public static var defaultFileName: Swift.String {
    get
  }
  public static func instantiateViewController(_ bundle: Foundation.Bundle? = nil) -> Self
}
public struct VideoChatCommands {
  public static let kChangeFlash: Swift.String
  public static let kOperatorLeft: Swift.String
  public static let kOperatorJoined: Swift.String
  public static let kChangeCamera: Swift.String
  public static let kOperatorLeftFailed: Swift.String
  public static let kOperatorLeftSuccess: Swift.String
  public static let kOperatorLeftComingManager: Swift.String
}
